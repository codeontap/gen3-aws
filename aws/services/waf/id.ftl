[#ftl]

[#-- Resources --]
[#-- At the moment, the condition resource types are being     --]
[#-- generated by prepending "waf" to the condition type       --]
[#-- If they end up needing custom attributes, then individual --]
[#-- reousrce type definitions will be needed here but for now --]
[#-- AWs hasn't defined any of interest                        --]
[#assign AWS_WAF_RULE_RESOURCE_TYPE = "wafRule" ]
[#assign AWS_WAF_ACL_RESOURCE_TYPE = "wafAcl" ]
[#assign AWS_WAF_ACL_ASSOCIATION_RESOURCE_TYPE = "wafAssoc" ]
[#assign AWS_WAF_IPSET_RESOURCE_TYPE = "wafIpSet" ]

[#assign AWS_WAFV2_RULE_RESOURCE_TYPE = "wafv2Rule" ]
[#assign AWS_WAFV2_ACL_RESOURCE_TYPE = "wafv2Acl" ]
[#assign AWS_WAFV2_ACL_ASSOCIATION_RESOURCE_TYPE = "wafv2Assoc" ]
[#assign AWS_WAFV2_IPSET_RESOURCE_TYPE = "wafv2IpSet" ]

[#list [
    AWS_WAF_RULE_RESOURCE_TYPE,
    AWS_WAF_ACL_RESOURCE_TYPE,
    AWS_WAF_ACL_ASSOCIATION_RESOURCE_TYPE,
    AWS_WAF_IPSET_RESOURCE_TYPE,
    AWS_WAFV2_RULE_RESOURCE_TYPE,
    AWS_WAFV2_ACL_RESOURCE_TYPE,
    AWS_WAFV2_ACL_ASSOCIATION_RESOURCE_TYPE,
    AWS_WAFV2_IPSET_RESOURCE_TYPE ] as resource]

    [@addServiceResource
        provider=AWS_PROVIDER
        service=AWS_WEB_APPLICATION_FIREWALL_SERVICE
        resource=resource
    /]
[/#list]


[#function formatDependentWAFConditionId version type resourceId extensions...]
    [#return formatDependentResourceId(
        (version == "v2")?then(
            "wafv2",
            "waf"
        ) + type,
        resourceId,
        extensions)]
[/#function]

[#function formatDependentWAFRuleId version resourceId extensions...]
    [#return formatDependentResourceId(
            (version == "v2")?then(
                AWS_WAFV2_RULE_RESOURCE_TYPE,
                AWS_WAF_RULE_RESOURCE_TYPE
            ),
            resourceId,
            extensions)]
[/#function]

[#function formatDependentWAFAclId version resourceId extensions...]
    [#return formatDependentResourceId(
            (version == "v2")?then(
                AWS_WAFV2_ACL_RESOURCE_TYPE,
                AWS_WAF_ACL_RESOURCE_TYPE
            ),
            resourceId,
            extensions)]
[/#function]

[#function formatDependentWAFAclAssociationId version resourceId extensions...]
    [#return formatDependentResourceId(
        (version == "v2")?then(
            AWS_WAFV2_ACL_ASSOCIATION_RESOURCE_TYPE,
            AWS_WAF_ACL_ASSOCIATION_RESOURCE_TYPE
        ),
        resourceId,
        extensions
    )]
[/#function]
